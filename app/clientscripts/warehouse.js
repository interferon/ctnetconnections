// Generated by CoffeeScript 1.7.1
(function() {
  $(document).ready(function() {
    var deletePlan, getAndDisplayWorkersCashData, getAndShowBoxStoreData, getAndShowpatchcordStoreData, getAndShowpatchpanelStoreData, getAndShowpigtailsStoreData, getAndShowsocketsStoreData, getBoxBillsByDate, getChangeLogsByDate, getCopperBillsByDate, getCopperIncomeByDate, getOpticalBillsByDate, getOpticalLogsByDate, getOpticalUseByDate, getWareHouseLogs, getWareHouseLogsByDate, getpatchcordBillsByDate, getpatchpanelBillsByDate, getpigtailsBillsByDate, getsocketsBillsByDate, isOptionSelected, populateAndShowWarehouseTablesTab, populateSelectorsFromDB, saveChangesToWareHouseLogs, saveOpticalFiberLog, showConfirmDialog, showCopperIncome, showCopperUseDialog, showOpticalIncomeTable, showOpticalPlanDialog, showOpticalUseDialog, showPlan, updateBoxStore, updateCashDatabase, updatepatchcordStore, updatepatchpanelStore, updatepigtailsStore, updatesocketsStore, workerSelectors;
    $("input[type=date]").val(new Date().toISOString().slice(0, 10));
    utils.setServerCommunicator(serverCommunicator.getInstance());
    $.extend($.validator.messages, {
      required: "Заповніть поле!",
      remote: "Please fix this field.",
      email: "Please enter a valid email address.",
      url: "Please enter a valid URL.",
      date: "Please enter a valid date.",
      dateISO: "Please enter a valid date (ISO).",
      number: "Please enter a valid number.",
      digits: "Тільки цифрові значення.",
      creditcard: "Please enter a valid credit card number.",
      equalTo: "Please enter the same value again.",
      accept: "Please enter a value with a valid extension.",
      maxlength: jQuery.validator.format("Please enter no more than {0} characters."),
      minlength: jQuery.validator.format("Please enter at least {0} characters."),
      rangelength: jQuery.validator.format("Please enter a value between {0} and {1} characters long."),
      range: jQuery.validator.format("Please enter a value between {0} and {1}."),
      max: jQuery.validator.format("Please enter a value less than or equal to {0}."),
      min: jQuery.validator.format("Please enter a value greater than or equal to {0}.")
    });
    $.validator.addMethod("uploadFile", function(val, element) {
      var allow, ext;
      ext = $(element).val().split('.')[1].toLowerCase();
      allow = ['jpeg', 'bmp', 'png', 'jpg'];
      if ($.inArray(ext, allow) === -1) {
        return false;
      } else {
        return true;
      }
    }, "Невірний формат файлу!");
    workerSelectors = [];
    workerSelectors.push($("#workerselector"));
    workerSelectors.push($("#opticaluseworkerselector"));
    populateSelectorsFromDB = function(selectors, collection, params) {
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": collection
          }
        ],
        "path": "getsaveditems"
      }, function(data) {
        data.sort(utils.compare);
        return utils.fillselectors(data, selectors, params);
      });
    };
    populateSelectorsFromDB(workerSelectors, 'workers', ['name']);
    populateSelectorsFromDB([$("#boxstoreselector")], 'boxesnames', ['name']);
    isOptionSelected = function(selector) {
      return selector.find("option:selected").length > 0;
    };
    showConfirmDialog = function(fn) {
      $("#delconfirmmodal").modal('show');
      return $("#deleteitemirreversibly").bind('click', function() {
        fn();
        $("#deleteitemirreversibly").unbind('click');
        return $("#delconfirmmodal").modal('hide');
      });
    };
    $("#warehouse").bind('click', function() {
      return populateAndShowWarehouseTablesTab();
    });
    populateAndShowWarehouseTablesTab = function() {
      utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "copperincome"
          }, {
            "param_name": "type",
            "param_value": "warehouse"
          }
        ],
        "path": "getsaveditems"
      }, function(tabledata) {
        var table;
        $("#copppercablewarehousetable").empty();
        table = utils.createTable(tabledata);
        return $("#copppercablewarehousetable").append(table);
      });
      utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "opticalincome"
          }, {
            "param_name": "type",
            "param_value": "warehouse"
          }
        ],
        "path": "getsaveditems"
      }, function(tabledata) {
        var table;
        $("#opticalcablewarehousetable").empty();
        table = utils.createTable(tabledata);
        return $("#opticalcablewarehousetable").append(table);
      });
      utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "boxstore"
          }, {
            "param_name": "type",
            "param_value": "warehouse"
          }
        ],
        "path": "getsaveditems"
      }, function(tabledata) {
        var table;
        $("#boxeswarehousetable").empty();
        table = utils.createTable(tabledata);
        return $("#boxeswarehousetable").append(table);
      });
      utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "patchpanelstore"
          }, {
            "param_name": "type",
            "param_value": "warehouse"
          }
        ],
        "path": "getsaveditems"
      }, function(tabledata) {
        var table;
        $("#patchpanelswarehousetable").empty();
        table = utils.createTable(tabledata);
        return $("#patchpanelswarehousetable").append(table);
      });
      utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "patchcordstore"
          }, {
            "param_name": "type",
            "param_value": "warehouse"
          }
        ],
        "path": "getsaveditems"
      }, function(tabledata) {
        var table;
        $("#patchcordswarehousetable").empty();
        table = utils.createTable(tabledata);
        return $("#patchcordswarehousetable").append(table);
      });
      utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "pigtailsstore"
          }, {
            "param_name": "type",
            "param_value": "warehouse"
          }
        ],
        "path": "getsaveditems"
      }, function(tabledata) {
        var table;
        $("#pigtailswarehousetable").empty();
        table = utils.createTable(tabledata);
        return $("#pigtailswarehousetable").append(table);
      });
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "socketsstore"
          }, {
            "param_name": "type",
            "param_value": "warehouse"
          }
        ],
        "path": "getsaveditems"
      }, function(tabledata) {
        var table;
        $("#socketswarehousetable").empty();
        table = utils.createTable(tabledata);
        return $("#socketswarehousetable").append(table);
      });
    };
    $("#warehouselogs").bind('click', function() {
      return getWareHouseLogsByDate();
    });
    populateAndShowWarehouseTablesTab();
    getWareHouseLogsByDate = function() {
      var end, start;
      start = $("#warehouselogsstart").val().split("-");
      end = $("#warehouselogsstop").val().split("-");
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "type",
            "param_value": "bydate"
          }, {
            "param_name": "syear",
            "param_value": start[0]
          }, {
            "param_name": "smonth",
            "param_value": start[1] - 1
          }, {
            "param_name": "sday",
            "param_value": start[2]
          }, {
            "param_name": "eyear",
            "param_value": end[0]
          }, {
            "param_name": "emonth",
            "param_value": end[1] - 1
          }, {
            "param_name": "eday",
            "param_value": end[2]
          }
        ],
        "path": "getwarehouselogs"
      }, function(tabledata) {
        var table;
        $("#warehouselogstable").empty();
        table = utils.createTable(tabledata);
        return $("#warehouselogstable").append(table);
      });
    };
    getWareHouseLogs = function() {
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "type",
            "param_value": "lastlogs"
          }
        ],
        "path": "getwarehouselogs"
      }, function(tabledata) {
        var table;
        $("#warehouselogstable").empty();
        table = utils.createTable(tabledata);
        return $("#warehouselogstable").append(table);
      });
    };
    $("#warehouselogsstart").bind('change', function() {
      return getWareHouseLogsByDate();
    });
    $("#warehouselogsstop").bind('change', function() {
      return getWareHouseLogsByDate();
    });
    $("#warehouselogs").bind('click', function() {
      return getWareHouseLogs();
    });
    showCopperUseDialog = function(id) {
      $("#addcopperuse").attr('value', id);
      return $("#copperUseModal").modal('show');
    };
    $("#addcopperuse").bind('click', function(e) {
      var id, workers;
      if ($("#copperuseform").valid() && isOptionSelected($("#workerselector"))) {
        id = e.target.getAttribute('value');
        workers = [];
        $('#workerselector :selected').each(function(i, selected) {
          return workers[i] = $(selected).text().trim();
        });
        return utils.postToServer('savecopperuse', {
          "data": {
            "length": +$("#copperuselength").val(),
            "contract": $("#coppercontract").val(),
            "workers": workers,
            "date": new Date().toISOString(),
            "user": ""
          },
          "income_id": id
        }, function() {
          showCopperIncome();
          return $("button.close").trigger('click');
        });
      }
    });
    showCopperIncome = function() {
      $("#copperincometable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "copperincome"
          }, {
            "param_name": "type",
            "param_value": "incometable"
          }
        ],
        "path": "getsaveditems"
      }, function(tableData) {
        var table;
        table = utils.createTableWithActiveElements(tableData, showCopperUseDialog, {
          selector: 'copperincome'
        });
        $("#copperincometable").append(table);
        return $("#copperincometable").show();
      });
    };
    $("#showcopperincome").bind('click', function() {
      return showCopperIncome();
    });
    $("#showcopperuse").bind('click', function() {
      $("#copperusetable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "copperuse"
          }
        ],
        "path": "getsaveditems"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#copperusetable").append(table);
        return $("#copperusetable").show();
      });
    });
    $("#showcopperbillimgs").bind('click', function() {
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "copperincome"
          }, {
            "param_name": "type",
            "param_value": 'bills'
          }
        ],
        "path": "getsaveditems"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#copperbillsimages").empty();
        $("#copperbillsimages").append(table);
        return $("#copperbillsimages").show();
      });
    });
    $('#savecopperincome').bind('click', function(evt) {
      evt.preventDefault();
      if ($("#copperinputform").valid()) {
        return utils.saveImageToServer($("#copperbillimage")[0].files[0], '/uploadbillimage', function(image) {
          return utils.postToServer('savecopperincome', {
            "type": $("#coppercabletype option:selected").text(),
            "pairs": $("#copperpairs option:selected").text(),
            "rope": $("#copperrope").val(),
            "manufacturer": $("#coppermanufacturer").val(),
            "serial": $("#copperserial").val(),
            "length": +$("#copperlength").val(),
            "initiallength": +$("#copperlength").val(),
            "price": +$("#copperprice").val(),
            "image": image,
            "date": new Date().toISOString(),
            "user": ""
          }, function() {});
        });
      }
    });
    getCopperIncomeByDate = function() {
      var end, start;
      start = $("#copperusestart").val().split("-");
      end = $("#copperusestop").val().split("-");
      $("#copperusetable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "syear",
            "param_value": start[0]
          }, {
            "param_name": "smonth",
            "param_value": start[1] - 1
          }, {
            "param_name": "sday",
            "param_value": start[2]
          }, {
            "param_name": "eyear",
            "param_value": end[0]
          }, {
            "param_name": "emonth",
            "param_value": end[1] - 1
          }, {
            "param_name": "eday",
            "param_value": end[2]
          }
        ],
        "path": "getcopperuse"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#copperusetable").append(table);
        return $("#copperusetable").show();
      });
    };
    $("#copperusestart").bind('change', function() {
      return getCopperIncomeByDate();
    });
    $("#copperusestop").bind('change', function() {
      return getCopperIncomeByDate();
    });
    getCopperBillsByDate = function() {
      var end, start;
      start = $("#copperbillsstart").val().split("-");
      end = $("#copperbillsstop").val().split("-");
      $("#copperbillsimages").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "syear",
            "param_value": start[0]
          }, {
            "param_name": "smonth",
            "param_value": start[1] - 1
          }, {
            "param_name": "sday",
            "param_value": start[2]
          }, {
            "param_name": "eyear",
            "param_value": end[0]
          }, {
            "param_name": "emonth",
            "param_value": end[1] - 1
          }, {
            "param_name": "eday",
            "param_value": end[2]
          }
        ],
        "path": "getcopperbills"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#copperbillsimages").append(table);
        return $("#copperbillsimages").show();
      });
    };
    $("#copperbillsstart").bind('change', function() {
      return getCopperBillsByDate();
    });
    $("#copperbillsstop").bind('change', function() {
      return getCopperBillsByDate();
    });
    showOpticalPlanDialog = function(id) {
      $("#addcableplan").attr('value', id);
      return $("#opticalPlanModal").modal('show');
    };
    showOpticalUseDialog = function(id, income_id) {
      $("#addopticalcableuse").attr('value', id);
      return $("#opticalUseModal").modal('show');
    };
    showPlan = function(income_id) {
      $("#opticalincometable tr").each(function() {
        return $(this).attr('class', '');
      });
      $("#opticalincometable tr[value=" + income_id + "]").addClass('info');
      $("#opticalplannedtable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "opticalplans"
          }, {
            "param_name": "income_id",
            "param_value": income_id
          }
        ],
        "path": "getsaveditems"
      }, function(result) {
        var table;
        table = utils.createTableWithActiveElements(result.planTableData, showOpticalUseDialog, {
          "fn": deletePlan,
          selector: 'opticalplan',
          "income_id": result.income_id
        });
        $("#opticalplannedtable").append(table);
        return $("#opticalplannedtable").show();
      });
    };
    deletePlan = function(plan_id) {
      return showConfirmDialog(function() {
        return utils.getDataFromDB({
          "parameters": [
            {
              "param_name": "collection",
              "param_value": "opticalplans"
            }, {
              "param_name": "type",
              "param_value": 'onlyitems'
            }
          ],
          "path": "getsaveditems"
        }, function(plans) {
          var plan;
          plan = plans.filter(function(e) {
            return e._id.toString() === plan_id;
          })[0];
          saveOpticalFiberLog('Видалив заплановану подію', plan.length, plan.intensions, plan.income_id);
          return utils.postToServer('deleteitem', {
            "collection": 'opticalplans',
            "_id": plan_id
          }, function() {
            showOpticalIncomeTable();
            return $("#opticalplannedtable").empty();
          });
        });
      });
    };
    $("#showopticalincome").bind('click', function() {
      return showOpticalIncomeTable();
    });
    $("#showcabelimgs").bind('click', function() {
      $("#billsimages").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "opticalincome"
          }, {
            "param_name": "type",
            "param_value": 'bills'
          }
        ],
        "path": "getsaveditems"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#billsimages").append(table);
        return $("#billsimages").show();
      });
    });
    $("#addcableplan").bind('click', function(e) {
      var id;
      if ($("#opticalplanform").valid()) {
        id = e.target.getAttribute('value');
        return utils.postToServer('savecableplan', {
          "length": +$("#opticalplanlength").val(),
          "intensions": $("#opticalintensions").val(),
          "intensionstype": $("#cabelPlanType").val(),
          "date": new Date().toISOString(),
          "user": "",
          "income_id": id
        }, function() {
          showOpticalIncomeTable();
          $("#opticalplannedtable").empty();
          return $("button.close").trigger('click');
        });
      }
    });
    saveOpticalFiberLog = function(action, length, intensions, income_id) {
      return utils.postToServer('saveitem', {
        "collection": "opticallogs",
        "data": {
          "action": action,
          "length": length,
          "date": new Date().toISOString(),
          "intensions": intensions,
          "cable": "",
          "user": ""
        },
        "income_id": income_id
      }, function() {});
    };
    showOpticalIncomeTable = function() {
      $("#opticalincometable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "opticalincome"
          }, {
            "param_name": "type",
            "param_value": "incometable"
          }
        ],
        "path": "getsaveditems"
      }, function(tableData) {
        var table;
        table = utils.createTableWithActiveElements(tableData, showOpticalPlanDialog, {
          "fn": showPlan,
          "selector": 'opticalincome'
        });
        $("#opticalincometable").append(table);
        return $("#opticalincometable").show();
      });
    };
    $("#addopticalcableuse").bind('click', function(e) {
      var id, incomeid, workers;
      if ($("#opticaluseform").valid() && isOptionSelected($("#opticaluseworkerselector"))) {
        incomeid = $("#dataTable tr.info").attr('value');
        id = e.target.getAttribute('value');
        workers = [];
        $('#opticaluseworkerselector :selected').each(function(i, selected) {
          return workers[i] = $(selected).text().trim();
        });
        return utils.postToServer('saveopticaluse', {
          "data": {
            "length": +$("#opticaluselength").val(),
            "workers": workers,
            "date": new Date().toISOString(),
            "user": "",
            "intensions": ""
          },
          "income_id": incomeid,
          "plan_id": id
        }, function(plan) {
          showOpticalIncomeTable();
          $("#opticalplannedtable").empty();
          return $("button.close").trigger('click');
        });
      }
    });
    $("#showopticaluse").bind('click', function() {
      $("#opticalusetable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "opticaluse"
          }
        ],
        "path": "getsaveditems"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#opticalusetable").append(table);
        return $("#opticalusetable").show();
      });
    });
    $("#showopticallogs").bind('click', function() {
      $("#opticallogstable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "opticallogs"
          }
        ],
        "path": "getsaveditems"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#opticallogstable").append(table);
        return $("#opticallogstable").show();
      });
    });
    $('#saveopticalincome').bind('click', function(evt) {
      evt.preventDefault();
      if ($("#opticalincomeform").valid()) {
        return utils.saveImageToServer($('#opticalbillimage')[0].files[0], '/uploadbillimage', function(image) {
          return utils.postToServer('saveopticalincome', {
            "fibers": $("#optfibers option:selected").text(),
            "rope": $("#optrope").val(),
            "manufacturer": $("#optmanufacturer").val(),
            "drum": $("#optdrum option:selected").text(),
            "length": +$("#optlength").val(),
            "initiallength": +$("#optlength").val(),
            "price": +$("#optprice").val(),
            "image": image,
            "date": new Date().toISOString(),
            "user": ""
          }, function() {});
        });
      }
    });
    getOpticalBillsByDate = function() {
      var end, start;
      start = $("#optbillsstart").val().split("-");
      end = $("#optbillsstop").val().split("-");
      $("#billsimages").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "syear",
            "param_value": start[0]
          }, {
            "param_name": "smonth",
            "param_value": start[1] - 1
          }, {
            "param_name": "sday",
            "param_value": start[2]
          }, {
            "param_name": "eyear",
            "param_value": end[0]
          }, {
            "param_name": "emonth",
            "param_value": end[1] - 1
          }, {
            "param_name": "eday",
            "param_value": end[2]
          }
        ],
        "path": "getopticalbills"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#billsimages").append(table);
        return $("#billsimages").show();
      });
    };
    $("#optbillsstart").bind('change', function() {
      return getOpticalBillsByDate();
    });
    $("#optbillsstop").bind('change', function() {
      return getOpticalBillsByDate();
    });
    getOpticalUseByDate = function() {
      var end, start;
      start = $("#optusestart").val().split("-");
      end = $("#optusestop").val().split("-");
      $("#opticalusetable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "syear",
            "param_value": start[0]
          }, {
            "param_name": "smonth",
            "param_value": start[1] - 1
          }, {
            "param_name": "sday",
            "param_value": start[2]
          }, {
            "param_name": "eyear",
            "param_value": end[0]
          }, {
            "param_name": "emonth",
            "param_value": end[1] - 1
          }, {
            "param_name": "eday",
            "param_value": end[2]
          }
        ],
        "path": "getopticaluse"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#opticalusetable").append(table);
        return $("#opticalusetable").show();
      });
    };
    $("#optusestart").bind('change', function() {
      return getOpticalUseByDate();
    });
    $("#optusestop").bind('change', function() {
      return getOpticalUseByDate();
    });
    getOpticalLogsByDate = function() {
      var end, start;
      start = $("#optlogsstart").val().split("-");
      end = $("#optlogsstop").val().split("-");
      $("#opticallogstable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "syear",
            "param_value": start[0]
          }, {
            "param_name": "smonth",
            "param_value": start[1] - 1
          }, {
            "param_name": "sday",
            "param_value": start[2]
          }, {
            "param_name": "eyear",
            "param_value": end[0]
          }, {
            "param_name": "emonth",
            "param_value": end[1] - 1
          }, {
            "param_name": "eday",
            "param_value": end[2]
          }
        ],
        "path": "getopticallogs"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#opticallogstable").append(table);
        return $("#opticallogstable").show();
      });
    };
    $("#optlogsstart").bind('change', function() {
      return getOpticalLogsByDate();
    });
    $("#optlogsstop").bind('change', function() {
      return getOpticalLogsByDate();
    });
    getChangeLogsByDate = function() {
      var end, start;
      start = $("#changelogstartdate").val().split("-");
      end = $("#changelogenddate").val().split("-");
      $("#changelogtable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "syear",
            "param_value": start[0]
          }, {
            "param_name": "smonth",
            "param_value": start[1] - 1
          }, {
            "param_name": "sday",
            "param_value": start[2]
          }, {
            "param_name": "eyear",
            "param_value": end[0]
          }, {
            "param_name": "emonth",
            "param_value": end[1] - 1
          }, {
            "param_name": "eday",
            "param_value": end[2]
          }
        ],
        "path": "getchangelogs"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#changelogtable").append(table);
        return $("#changelogtable").show();
      });
    };
    $("#changelogstartdate").bind('change', function() {
      return getChangeLogsByDate();
    });
    $("#changelogenddate").bind('change', function() {
      return getChangeLogsByDate();
    });
    $('#saveboxtostore').bind('click', function(evt) {
      evt.preventDefault();
      if ($("#boxstoreform").valid()) {
        return utils.saveImageToServer($('#boxbillimage')[0].files[0], '/uploadbillimage', function(image) {
          return utils.postToServer('saveboxtostore', {
            "data": {
              "box_name": $("#boxstoreselector option:selected").text().trim(),
              "quantity": +$("#boxquantity").val(),
              "init_quantity": +$("#boxquantity").val(),
              "image": image,
              "date": new Date().toISOString()
            }
          }, function() {});
        });
      }
    });
    getBoxBillsByDate = function() {
      var end, start;
      start = $("#boxbillsstart").val().split("-");
      end = $("#boxbillsstop").val().split("-");
      $("#boxesbillstable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "syear",
            "param_value": start[0]
          }, {
            "param_name": "smonth",
            "param_value": start[1] - 1
          }, {
            "param_name": "sday",
            "param_value": start[2]
          }, {
            "param_name": "eyear",
            "param_value": end[0]
          }, {
            "param_name": "emonth",
            "param_value": end[1] - 1
          }, {
            "param_name": "eday",
            "param_value": end[2]
          }
        ],
        "path": "getboxesbills"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#boxesbillstable").append(table);
        return $("#boxesbillstable").show();
      });
    };
    $("#boxbillsstart").bind('change', function() {
      return getBoxBillsByDate();
    });
    $("#boxbillsstop").bind('change', function() {
      return getBoxBillsByDate();
    });
    updateBoxStore = function(_id) {
      var id, value;
      id = _id;
      value = +$("#" + id).val() * -1;
      return utils.postToServer('update', {
        "collection": 'boxstore',
        "_id": id,
        "data": {
          'quantity': value
        },
        "update_type": "inc"
      }, function() {
        saveChangesToWareHouseLogs(id, "boxstore", value);
        return getAndShowBoxStoreData();
      });
    };
    getAndShowBoxStoreData = function() {
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": 'boxstore'
          }, {
            "param_name": "type",
            "param_value": 'incometable'
          }
        ],
        "path": "getsaveditems"
      }, function(tableData) {
        $("#boxesstoretable").empty();
        tableData = utils.createTableWithActiveElements(tableData, updateBoxStore, {
          selector: 'boxesstore'
        });
        return $("#boxesstoretable").append(tableData);
      });
    };
    $("#boxtostoretabletab").bind('click', function() {
      return getAndShowBoxStoreData();
    });
    $("#boxbills").bind('click', function() {
      $("#boxesbillstable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "boxstore"
          }, {
            "param_name": "type",
            "param_value": 'bills'
          }
        ],
        "path": "getsaveditems"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#boxesbillstable").append(table);
        return $("#boxesbillstable").show();
      });
    });
    $('#savepatchpaneltostore').bind('click', function(evt) {
      evt.preventDefault();
      if ($("#patchpanelstoreform").valid()) {
        return utils.saveImageToServer($('#patchpanelbillimage')[0].files[0], '/uploadbillimage', function(image) {
          return utils.postToServer('savepatchpaneltostore', {
            "data": {
              "patchpanel_name": $("#patchpanelstoreselector option:selected").text().trim(),
              "quantity": +$("#patchpanelquantity").val(),
              "init_quantity": +$("#patchpanelquantity").val(),
              "image": image,
              "date": new Date().toISOString()
            }
          }, function() {});
        });
      }
    });
    getpatchpanelBillsByDate = function() {
      var end, start;
      start = $("#patchpanelbillsstart").val().split("-");
      end = $("#patchpanelbillsstop").val().split("-");
      $("#patchpanelesbillstable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "syear",
            "param_value": start[0]
          }, {
            "param_name": "smonth",
            "param_value": start[1] - 1
          }, {
            "param_name": "sday",
            "param_value": start[2]
          }, {
            "param_name": "eyear",
            "param_value": end[0]
          }, {
            "param_name": "emonth",
            "param_value": end[1] - 1
          }, {
            "param_name": "eday",
            "param_value": end[2]
          }
        ],
        "path": "getpatchpanelesbills"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#patchpanelesbillstable").append(table);
        return $("#patchpanelesbillstable").show();
      });
    };
    $("#patchpanelbillsstart").bind('change', function() {
      return getpatchpanelBillsByDate();
    });
    $("#patchpanelbillsstop").bind('change', function() {
      return getpatchpanelBillsByDate();
    });
    updatepatchpanelStore = function(_id) {
      var id, value;
      id = _id;
      value = +$("#" + id).val() * -1;
      return utils.postToServer('update', {
        "collection": 'patchpanelstore',
        "_id": id,
        "data": {
          'quantity': value
        },
        "update_type": "inc"
      }, function() {
        saveChangesToWareHouseLogs(id, "patchpanelstore", value);
        return getAndShowpatchpanelStoreData();
      });
    };
    getAndShowpatchpanelStoreData = function() {
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": 'patchpanelstore'
          }, {
            "param_name": "type",
            "param_value": 'incometable'
          }
        ],
        "path": "getsaveditems"
      }, function(tableData) {
        $("#patchpanelesstoretable").empty();
        tableData = utils.createTableWithActiveElements(tableData, updatepatchpanelStore, {
          selector: 'patchpanelesstore'
        });
        return $("#patchpanelesstoretable").append(tableData);
      });
    };
    $("#patchpaneltostoretabletab").bind('click', function() {
      return getAndShowpatchpanelStoreData();
    });
    $("#patchpanelbills").bind('click', function() {
      $("#patchpanelesbillstable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "patchpanelstore"
          }, {
            "param_name": "type",
            "param_value": 'bills'
          }
        ],
        "path": "getsaveditems"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#patchpanelesbillstable").append(table);
        return $("#patchpanelesbillstable").show();
      });
    });
    $('#savepatchcordtostore').bind('click', function(evt) {
      evt.preventDefault();
      if ($("#patchcordstoreform").valid()) {
        return utils.saveImageToServer($('#patchcordbillimage')[0].files[0], '/uploadbillimage', function(image) {
          return utils.postToServer('savepatchcordtostore', {
            "data": {
              "patchcord_length": $("#patchcordlengthsselector option:selected").text().trim(),
              "patchcord_types": $("#patchcordstypesselector option:selected").text().trim(),
              "quantity": +$("#patchcordquantity").val(),
              "init_quantity": +$("#patchcordquantity").val(),
              "image": image,
              "date": new Date().toISOString()
            }
          }, function() {});
        });
      }
    });
    getpatchcordBillsByDate = function() {
      var end, start;
      start = $("#patchcordbillsstart").val().split("-");
      end = $("#patchcordbillsstop").val().split("-");
      $("#patchcordesbillstable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "syear",
            "param_value": start[0]
          }, {
            "param_name": "smonth",
            "param_value": start[1] - 1
          }, {
            "param_name": "sday",
            "param_value": start[2]
          }, {
            "param_name": "eyear",
            "param_value": end[0]
          }, {
            "param_name": "emonth",
            "param_value": end[1] - 1
          }, {
            "param_name": "eday",
            "param_value": end[2]
          }
        ],
        "path": "getpatchcordesbills"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#patchcordesbillstable").append(table);
        return $("#patchcordesbillstable").show();
      });
    };
    $("#patchcordbillsstart").bind('change', function() {
      return getpatchcordBillsByDate();
    });
    $("#patchcordbillsstop").bind('change', function() {
      return getpatchcordBillsByDate();
    });
    updatepatchcordStore = function(_id) {
      var id, value;
      id = _id;
      value = +$("#" + id).val() * -1;
      return utils.postToServer('update', {
        "collection": 'patchcordstore',
        "_id": id,
        "data": {
          'quantity': value
        },
        "update_type": "inc"
      }, function() {
        saveChangesToWareHouseLogs(id, "patchcordstore", value);
        return getAndShowpatchcordStoreData();
      });
    };
    getAndShowpatchcordStoreData = function() {
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": 'patchcordstore'
          }, {
            "param_name": "type",
            "param_value": 'incometable'
          }
        ],
        "path": "getsaveditems"
      }, function(tableData) {
        $("#patchcordesstoretable").empty();
        tableData = utils.createTableWithActiveElements(tableData, updatepatchcordStore, {
          selector: 'patchcordesstore'
        });
        return $("#patchcordesstoretable").append(tableData);
      });
    };
    $("#patchcordtostoretabletab").bind('click', function() {
      return getAndShowpatchcordStoreData();
    });
    $("#patchcordbills").bind('click', function() {
      $("#patchcordesbillstable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "patchcordstore"
          }, {
            "param_name": "type",
            "param_value": 'bills'
          }
        ],
        "path": "getsaveditems"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#patchcordesbillstable").append(table);
        return $("#patchcordesbillstable").show();
      });
    });
    $('#savepigtailstostore').bind('click', function(evt) {
      evt.preventDefault();
      if ($("#pigtailsstoreform").valid()) {
        return utils.saveImageToServer($('#pigtailsbillimage')[0].files[0], '/uploadbillimage', function(image) {
          return utils.postToServer('savepigtailstostore', {
            "data": {
              "pigtails_length": $("#pigtailslengthsselector option:selected").text().trim(),
              "pigtails_types": $("#pigtailstypesselector option:selected").text().trim(),
              "quantity": +$("#pigtailsquantity").val(),
              "init_quantity": +$("#pigtailsquantity").val(),
              "image": image,
              "date": new Date().toISOString()
            }
          }, function() {});
        });
      }
    });
    getpigtailsBillsByDate = function() {
      var end, start;
      start = $("#pigtailsbillsstart").val().split("-");
      end = $("#pigtailsbillsstop").val().split("-");
      $("#pigtailsesbillstable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "syear",
            "param_value": start[0]
          }, {
            "param_name": "smonth",
            "param_value": start[1] - 1
          }, {
            "param_name": "sday",
            "param_value": start[2]
          }, {
            "param_name": "eyear",
            "param_value": end[0]
          }, {
            "param_name": "emonth",
            "param_value": end[1] - 1
          }, {
            "param_name": "eday",
            "param_value": end[2]
          }
        ],
        "path": "getpigtailsesbills"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#pigtailsesbillstable").append(table);
        return $("#pigtailsesbillstable").show();
      });
    };
    $("#pigtailsbillsstart").bind('change', function() {
      return getpigtailsBillsByDate();
    });
    $("#pigtailsbillsstop").bind('change', function() {
      return getpigtailsBillsByDate();
    });
    updatepigtailsStore = function(_id) {
      var id, value;
      id = _id;
      value = +$("#" + id).val() * -1;
      return utils.postToServer('update', {
        "collection": 'pigtailsstore',
        "_id": id,
        "data": {
          'quantity': value
        },
        "update_type": "inc"
      }, function() {
        saveChangesToWareHouseLogs(id, "pigtailsstore", value);
        return getAndShowpigtailsStoreData();
      });
    };
    getAndShowpigtailsStoreData = function() {
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": 'pigtailsstore'
          }, {
            "param_name": "type",
            "param_value": 'incometable'
          }
        ],
        "path": "getsaveditems"
      }, function(tableData) {
        $("#pigtailsesstoretable").empty();
        tableData = utils.createTableWithActiveElements(tableData, updatepigtailsStore, {
          selector: 'pigtailsesstore'
        });
        return $("#pigtailsesstoretable").append(tableData);
      });
    };
    $("#pigtailstostoretabletab").bind('click', function() {
      return getAndShowpigtailsStoreData();
    });
    $("#pigtailsbills").bind('click', function() {
      $("#pigtailsesbillstable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "pigtailsstore"
          }, {
            "param_name": "type",
            "param_value": 'bills'
          }
        ],
        "path": "getsaveditems"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#pigtailsesbillstable").append(table);
        return $("#pigtailsesbillstable").show();
      });
    });
    $('#savesocketstostore').bind('click', function(evt) {
      evt.preventDefault();
      if ($("#socketsstoreform").valid()) {
        return utils.saveImageToServer($('#socketsbillimage')[0].files[0], '/uploadbillimage', function(image) {
          return utils.postToServer('savesocketstostore', {
            "data": {
              "sockets_type": $("#socketsstoreselector option:selected").text().trim(),
              "quantity": +$("#socketsquantity").val(),
              "init_quantity": +$("#socketsquantity").val(),
              "image": image,
              "date": new Date().toISOString()
            }
          }, function() {});
        });
      }
    });
    getsocketsBillsByDate = function() {
      var end, start;
      start = $("#socketsbillsstart").val().split("-");
      end = $("#socketsbillsstop").val().split("-");
      $("#socketsesbillstable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "syear",
            "param_value": start[0]
          }, {
            "param_name": "smonth",
            "param_value": start[1] - 1
          }, {
            "param_name": "sday",
            "param_value": start[2]
          }, {
            "param_name": "eyear",
            "param_value": end[0]
          }, {
            "param_name": "emonth",
            "param_value": end[1] - 1
          }, {
            "param_name": "eday",
            "param_value": end[2]
          }
        ],
        "path": "getsocketsesbills"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#socketsesbillstable").append(table);
        return $("#socketsesbillstable").show();
      });
    };
    $("#socketsbillsstart").bind('change', function() {
      return getsocketsBillsByDate();
    });
    $("#socketsbillsstop").bind('change', function() {
      return getsocketsBillsByDate();
    });
    updatesocketsStore = function(_id) {
      var id, value;
      id = _id;
      value = +$("#" + id).val() * -1;
      return utils.postToServer('update', {
        "collection": 'socketsstore',
        "_id": id,
        "data": {
          'quantity': value
        },
        "update_type": "inc"
      }, function() {
        getAndShowsocketsStoreData();
        return saveChangesToWareHouseLogs(id, "socketsstore", value);
      });
    };
    saveChangesToWareHouseLogs = function(id, collection, quantity) {
      return utils.postToServer('savewarehouseuselog', {
        "collection": collection,
        "id": id,
        "quantity": quantity * -1
      }, function() {});
    };
    getAndShowsocketsStoreData = function() {
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": 'socketsstore'
          }, {
            "param_name": "type",
            "param_value": 'incometable'
          }
        ],
        "path": "getsaveditems"
      }, function(tableData) {
        $("#socketsesstoretable").empty();
        tableData = utils.createTableWithActiveElements(tableData, updatesocketsStore, {
          selector: 'socketsesstore'
        });
        return $("#socketsesstoretable").append(tableData);
      });
    };
    $("#socketstostoretabletab").bind('click', function() {
      return getAndShowsocketsStoreData();
    });
    $("#socketsbills").bind('click', function() {
      $("#socketsesbillstable").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "collection",
            "param_value": "socketsstore"
          }, {
            "param_name": "type",
            "param_value": 'bills'
          }
        ],
        "path": "getsaveditems"
      }, function(tableData) {
        var table;
        table = utils.createTable(tableData);
        $("#socketsesbillstable").append(table);
        return $("#socketsesbillstable").show();
      });
    });
    updateCashDatabase = function(value) {
      return utils.postToServer("deleteitem", {
        "collection": "workerscash",
        "_id": value
      }, function() {
        return getAndDisplayWorkersCashData();
      });
    };
    getAndDisplayWorkersCashData = function() {
      $("#workerscashtables").empty();
      return utils.getDataFromDB({
        "parameters": [
          {
            "param_name": "coefficient",
            "param_value": 1
          }
        ],
        "path": "getworkerscash"
      }, function(tableData) {
        var table;
        table = utils.createTableWithActiveElements(tableData, updateCashDatabase, {
          selector: 'workerscash'
        });
        $("#workerscashtables").append(table);
        return $("#workerscashtables").show();
      });
    };
    $("#workercablecash").bind('click', function() {
      return getAndDisplayWorkersCashData();
    });
    $("#boxstoreform").validate({
      rules: {
        boxquantity: {
          required: true,
          digits: true
        },
        boxbillimage: {
          required: true
        }
      }
    });
    $("#patchcordstoreform").validate({
      rules: {
        patchcordquantity: {
          required: true,
          digits: true
        },
        patchcordbillimage: {
          required: true
        }
      }
    });
    $("#patchpanelstoreform").validate({
      rules: {
        patchpanelquantity: {
          required: true,
          digits: true
        },
        patchpanelbillimage: {
          required: true
        }
      }
    });
    $("#pigtailsstoreform").validate({
      rules: {
        pigtailsquantity: {
          required: true,
          digits: true
        },
        pigtailsbillimage: {
          required: true
        }
      }
    });
    $("#socketsstoreform").validate({
      rules: {
        socketsquantity: {
          required: true,
          digits: true
        },
        socketsbillimage: {
          required: true
        }
      }
    });
    $("#copperuseform").validate({
      rules: {
        copperuselength: {
          required: true,
          digits: true
        },
        coppercontract: {
          required: true
        }
      }
    });
    $("#opticalplanform").validate({
      rules: {
        opticalplanlength: {
          required: true,
          digits: true
        },
        opticalintensions: {
          required: true
        }
      }
    });
    $("#opticaluseform").validate({
      rules: {
        opticaluselength: {
          required: true,
          digits: true
        }
      }
    });
    $("#opticalincomeform").validate({
      rules: {
        optlength: {
          required: true,
          digits: true
        },
        optmanufacturer: {
          required: true
        },
        optprice: {
          required: true,
          digits: true
        },
        opticalbillimage: {
          required: true
        }
      }
    });
    return $("#copperinputform").validate({
      rules: {
        copperrope: {
          required: true,
          digits: true
        },
        coppermanufacturer: {
          required: true
        },
        copperserial: {
          required: true
        },
        copperlength: {
          required: true,
          digits: true
        },
        copperprice: {
          required: true,
          digits: true
        },
        copperbillimage: {
          required: true
        }
      }
    });
  });

}).call(this);
