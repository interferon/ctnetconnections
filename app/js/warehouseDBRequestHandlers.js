// Generated by CoffeeScript 1.6.2
(function() {
  var ROWS_NUMBER, accessChecker, dataProcFn, warehouseTableFns;

  dataProcFn = require('./dataProcessingFunctions');

  warehouseTableFns = require('./warehouseTableFns');

  accessChecker = require('./accessChecker');

  ROWS_NUMBER = 10;

  module.exports.start = function(app, db) {
    var saveWareHouseLogs;

    app.post('/saveboxtostore', accessChecker.checkAccess, function(req, res) {
      return db.save('boxstore', req.body.data, function(result) {
        dataProcFn.runResponse(res, result, 'text/plain');
        return saveWareHouseLogs('Надійшло на склад', 'Коробки', req.body.data.quantity, req.body.data.box_name);
      });
    });
    app.get("/getboxesbills", function(req, res) {
      var end, query, start;

      query = req.query;
      start = new Date(query.syear, query.smonth, query.sday, 23, 59).toISOString();
      end = new Date(query.eyear, query.emonth, query.eday, 23, 59).toISOString();
      return db.getByParam('boxstore', {
        "date": {
          "$gte": start,
          "$lte": end
        }
      }, function(items) {
        var tableData;

        tableData = dataProcFn.createBoxBillsData(items);
        return dataProcFn.runResponse(res, tableData, 'text/plain');
      });
    });
    app.post('/savepatchpaneltostore', accessChecker.checkAccess, function(req, res) {
      return db.save('patchpanelstore', req.body.data, function(result) {
        saveWareHouseLogs('Надійшло на склад', 'Патч-панель', req.body.data.quantity, req.body.data.patchpanel_name);
        return dataProcFn.runResponse(res, result, 'text/plain');
      });
    });
    app.get("/getpatchpanelesbills", function(req, res) {
      var end, query, start;

      query = req.query;
      start = new Date(query.syear, query.smonth, query.sday, 23, 59).toISOString();
      end = new Date(query.eyear, query.emonth, query.eday, 23, 59).toISOString();
      return db.getByParam('patchpanelstore', {
        "date": {
          "$gte": start,
          "$lte": end
        }
      }, function(items) {
        var tableData;

        tableData = dataProcFn.createpatchpanelBillsData(items);
        return dataProcFn.runResponse(res, tableData, 'text/plain');
      });
    });
    app.post('/savepatchcordtostore', accessChecker.checkAccess, function(req, res) {
      return db.save('patchcordstore', req.body.data, function(result) {
        saveWareHouseLogs('Надійшло на склад', 'Патч-корд', req.body.data.quantity, "Довжина : " + req.body.data.patchcord_length + ", Тип : " + req.body.data.patchcord_types);
        return dataProcFn.runResponse(res, result, 'text/plain');
      });
    });
    app.get("/getpatchcordesbills", function(req, res) {
      var end, query, start;

      query = req.query;
      start = new Date(query.syear, query.smonth, query.sday, 23, 59).toISOString();
      end = new Date(query.eyear, query.emonth, query.eday, 23, 59).toISOString();
      return db.getByParam('patchcordstore', {
        "date": {
          "$gte": start,
          "$lte": end
        }
      }, function(items) {
        var tableData;

        tableData = dataProcFn.createpatchcordBillsData(items);
        return dataProcFn.runResponse(res, tableData, 'text/plain');
      });
    });
    app.post('/savepigtailstostore', accessChecker.checkAccess, function(req, res) {
      return db.save('pigtailsstore', req.body.data, function(result) {
        saveWareHouseLogs('Надійшло на склад', 'Піг-тейли', req.body.data.quantity, "Довжина : " + req.body.data.pigtails_length + ", Тип : " + req.body.data.pigtails_types);
        return dataProcFn.runResponse(res, result, 'text/plain');
      });
    });
    app.get("/getpigtailsesbills", function(req, res) {
      var end, query, start;

      query = req.query;
      start = new Date(query.syear, query.smonth, query.sday, 23, 59).toISOString();
      end = new Date(query.eyear, query.emonth, query.eday, 23, 59).toISOString();
      return db.getByParam('pigtailsstore', {
        "date": {
          "$gte": start,
          "$lte": end
        }
      }, function(items) {
        var tableData;

        tableData = dataProcFn.createpigtailsBillsData(items);
        return dataProcFn.runResponse(res, tableData, 'text/plain');
      });
    });
    app.post('/savesocketstostore', accessChecker.checkAccess, function(req, res) {
      return db.save('socketsstore', req.body.data, function(result) {
        saveWareHouseLogs('Надійшло на склад', "Розетки", req.body.data.quantity, "Тип : " + req.body.data.sockets_type);
        return dataProcFn.runResponse(res, result, 'text/plain');
      });
    });
    app.get("/getsocketsesbills", function(req, res) {
      var end, query, start;

      query = req.query;
      start = new Date(query.syear, query.smonth, query.sday, 23, 59).toISOString();
      end = new Date(query.eyear, query.emonth, query.eday, 23, 59).toISOString();
      return db.getByParam('socketsstore', {
        "date": {
          "$gte": start,
          "$lte": end
        }
      }, function(items) {
        var tableData;

        tableData = dataProcFn.createsocketsBillsData(items);
        return dataProcFn.runResponse(res, tableData, 'text/plain');
      });
    });
    app.get("/getwarehouselogs", function(req, res) {
      var end, query, start;

      switch (req.query.type) {
        case 'lastlogs':
          return db.getAll('warehouselogs', function(items) {
            var tableData;

            if (items.length > ROWS_NUMBER) {
              items = items.slice(items.length - ROWS_NUMBER, items.length);
            }
            tableData = warehouseTableFns.createWareHouseLogsTableData(items);
            return dataProcFn.runResponse(res, tableData, 'text/plain');
          });
        case 'bydate':
          query = req.query;
          start = new Date(query.syear, query.smonth, query.sday, 23, 59).toISOString();
          end = new Date(query.eyear, query.emonth, query.eday, 23, 59).toISOString();
          return db.getByParam('warehouselogs', {
            "date": {
              "$gte": start,
              "$lte": end
            }
          }, function(items) {
            var tableData;

            tableData = warehouseTableFns.createWareHouseLogsTableData(items);
            return dataProcFn.runResponse(res, tableData, 'text/plain');
          });
      }
    });
    app.post("/savewarehouseuselog", function(req, res) {
      switch (req.body.collection) {
        case "boxstore":
          return db.getById('boxstore', req.body.id, function(data) {
            saveWareHouseLogs('Використано', "Коробки", req.body.quantity, data[0].box_name);
            return dataProcFn.runResponse(res, {
              result: "Вміст поля змінено!"
            }, 'text/plain');
          });
        case "patchpanelstore":
          return db.getById('patchpanelstore', req.body.id, function(data) {
            saveWareHouseLogs('Використано', 'Патч-панель', req.body.quantity, data[0].patchpanel_name);
            return dataProcFn.runResponse(res, {
              result: "Вміст поля змінено!"
            }, 'text/plain');
          });
        case "patchcordstore":
          return db.getById('patchcordstore', req.body.id, function(data) {
            saveWareHouseLogs('Використано', 'Патч-корд', req.body.quantity, "Довжина : " + data[0].patchcord_length + ", Тип : " + data[0].patchcord_types);
            return dataProcFn.runResponse(res, {
              result: "Вміст поля змінено!"
            }, 'text/plain');
          });
        case "pigtailsstore":
          return db.getById('pigtailsstore', req.body.id, function(data) {
            saveWareHouseLogs('Використано', 'Піг-тейли', req.body.quantity, "Довжина : " + data[0].pigtails_length + ", Тип : " + data[0].pigtails_types);
            return dataProcFn.runResponse(res, {
              result: "Вміст поля змінено!"
            }, 'text/plain');
          });
        case "socketsstore":
          return db.getById('socketsstore', req.body.id, function(data) {
            saveWareHouseLogs('Використано', "Розетки", req.body.quantity, "Тип : " + data[0].sockets_type);
            return dataProcFn.runResponse(res, {
              result: "Вміст поля змінено!"
            }, 'text/plain');
          });
      }
    });
    return saveWareHouseLogs = function(action, name, quantity, type) {
      return db.save('warehouselogs', {
        "action": action,
        "quantity": quantity,
        "type": type,
        "date": new Date().toISOString(),
        "name": name
      }, function() {
        return console.log("log saved");
      });
    };
  };

}).call(this);
