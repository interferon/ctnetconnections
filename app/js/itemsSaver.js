// Generated by CoffeeScript 1.7.1
(function() {
  var dataProcFn;

  dataProcFn = require('./dataProcessingFunctions');

  module.exports.save = function(collection, item, res, db) {
    var save, saver;
    save = function() {
      return db.save(collection, item, function(result) {
        return dataProcFn.runResponse(res, result, 'text/plain');
      });
    };
    saver = {
      buildings: function(item) {
        return db.getByParam('buildings', {
          street: item.street,
          number: item.number
        }, function(items) {
          if (items.length !== 0) {
            return dataProcFn.runResponse(res, {
              "result": "У базі вже є такий будинок!"
            }, 'text/plain');
          } else {
            return save();
          }
        });
      },
      streetnames: function(item) {
        return db.getByParam('streetnames', {
          name: {
            $regex: item.name,
            $options: 'i'
          }
        }, function(items) {
          if (items.length !== 0) {
            return dataProcFn.runResponse(res, {
              "result": "У базі вже є така вулиця!"
            }, 'text/plain');
          } else {
            return save();
          }
        });
      },
      boxesnames: function(item) {
        return db.getByParam('boxesnames', {
          name: {
            $regex: item.name,
            $options: 'i'
          }
        }, function(items) {
          if (items.length !== 0) {
            return dataProcFn.runResponse(res, {
              "result": "У базі вже є така коробка!"
            }, 'text/plain');
          } else {
            return save();
          }
        });
      },
      commutatornames: function(item) {
        return db.getByParam('commutatornames', {
          name: {
            $regex: item.name,
            $options: 'i'
          }
        }, function(items) {
          if (items.length !== 0) {
            return dataProcFn.runResponse(res, {
              "result": "У базі вже є такий комутатор!"
            }, 'text/plain');
          } else {
            return save();
          }
        });
      },
      upsnames: function(item) {
        return db.getByParam('upsnames', {
          name: {
            $regex: item.name,
            $options: 'i'
          }
        }, function(items) {
          if (items.length !== 0) {
            return dataProcFn.runResponse(res, {
              "result": "У базі вже є такий UPS!"
            }, 'text/plain');
          } else {
            return save();
          }
        });
      },
      odfnames: function(item) {
        return db.getByParam('odfnames', {
          name: {
            $regex: item.name,
            $options: 'i'
          }
        }, function(items) {
          if (items.length !== 0) {
            return dataProcFn.runResponse(res, {
              "result": "У базі вже є такий ODF!"
            }, 'text/plain');
          } else {
            return save();
          }
        });
      },
      workers: function(item) {
        return db.getByParam('workers', {
          name: {
            $regex: item.name,
            $options: 'i'
          }
        }, function(items) {
          if (items.length !== 0) {
            return dataProcFn.runResponse(res, {
              "result": "У базі вже є такий монтажник!"
            }, 'text/plain');
          } else {
            return save();
          }
        });
      },
      users: function(item) {
        return db.getByParam('users', {
          login: {
            $regex: item.login,
            $options: 'i'
          }
        }, function(items) {
          if (items.length !== 0) {
            return dataProcFn.runResponse(res, {
              "result": "У базі вже є такий логін!"
            }, 'text/plain');
          } else {
            return save();
          }
        });
      }
    };
    if (saver[collection]) {
      return saver[collection](item);
    } else {
      return save();
    }
  };

}).call(this);
