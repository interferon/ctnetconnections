// Generated by CoffeeScript 1.7.1
(function() {
  var collectionsManager, dataProcFn, itemsSaver, rowsnumber, warehouseTableFns;

  dataProcFn = require('./dataProcessingFunctions');

  warehouseTableFns = require('./warehouseTableFns');

  rowsnumber = 10;

  itemsSaver = require('./itemsSaver');

  collectionsManager = require('./collectionsManager');

  module.exports.start = function(app, db) {
    app.post('/saveitem', function(req, res) {
      console.log(req.body);
      return dataProcFn.createItem(req, db, function(item) {
        return itemsSaver.save(req.body.collection, item, res, db);
      });
    });
    app.get('/usdadjust', function(req, res) {
      return db.getByParam('other', {
        "adjust": {
          $exists: true
        }
      }, function(items) {
        return dataProcFn.runResponse(res, items[0], 'application/json');
      });
    });
    app.get('/getsaveditems', function(req, res) {
      req.query['login'] = req.session.login;
      return collectionsManager.processSavedItems(req.query, res, db);
    });
    app.get("/getcopperuse", function(req, res) {
      var end, query, start;
      query = req.query;
      start = new Date(query.syear, query.smonth, query.sday, 23, 59).toISOString();
      end = new Date(query.eyear, query.emonth, query.eday, 23, 59).toISOString();
      return db.getByParam('copperuse', {
        "date": {
          "$gte": start,
          "$lte": end
        }
      }, function(items) {
        var tableData;
        tableData = dataProcFn.createCopperUseTableData(items);
        return dataProcFn.runResponse(res, tableData, 'text/plain');
      });
    });
    app.get("/getcopperbills", function(req, res) {
      var end, query, start;
      query = req.query;
      start = new Date(query.syear, query.smonth, query.sday, 23, 59).toISOString();
      end = new Date(query.eyear, query.emonth, query.eday, 23, 59).toISOString();
      return db.getByParam('copperincome', {
        "date": {
          "$gte": start,
          "$lte": end
        }
      }, function(items) {
        var tableData;
        tableData = dataProcFn.createCopperIncomeBillsData(items);
        return dataProcFn.runResponse(res, tableData, 'text/plain');
      });
    });
    app.get("/getopticaluse", function(req, res) {
      var end, query, start;
      query = req.query;
      start = new Date(query.syear, query.smonth, query.sday, 23, 59).toISOString();
      end = new Date(query.eyear, query.emonth, query.eday, 23, 59).toISOString();
      return db.getByParam('opticaluse', {
        "date": {
          "$gte": start,
          "$lte": end
        }
      }, function(items) {
        var tableData;
        tableData = dataProcFn.createOpticalUseTableData(items);
        return dataProcFn.runResponse(res, tableData, 'text/plain');
      });
    });
    app.get("/getopticallogs", function(req, res) {
      var end, query, start;
      query = req.query;
      start = new Date(query.syear, query.smonth, query.sday, 23, 59).toISOString();
      end = new Date(query.eyear, query.emonth, query.eday, 23, 59).toISOString();
      return db.getByParam('opticallogs', {
        "date": {
          "$gte": start,
          "$lte": end
        }
      }, function(items) {
        var tableData;
        tableData = dataProcFn.createOpticalLogsTableData(items);
        return dataProcFn.runResponse(res, tableData, 'text/plain');
      });
    });
    app.get("/getopticalbills", function(req, res) {
      var end, query, start;
      query = req.query;
      start = new Date(query.syear, query.smonth, query.sday, 23, 59).toISOString();
      end = new Date(query.eyear, query.emonth, query.eday, 23, 59).toISOString();
      return db.getByParam('opticalincome', {
        "date": {
          "$gte": start,
          "$lte": end
        }
      }, function(items) {
        var tableData;
        tableData = dataProcFn.createOpticalIncomeBillsData(items);
        return dataProcFn.runResponse(res, tableData, 'text/plain');
      });
    });
    app.get("/getworkercash", function(req, res) {
      var query;
      query = req.query;
      return db.getAll('opticaluse', function(items) {});
    });
    app.get("/getchangelogs", function(req, res) {
      var end, query, start;
      query = req.query;
      start = new Date(query.syear, query.smonth, query.sday, 23, 59).toISOString();
      end = new Date(query.eyear, query.emonth, query.eday, 23, 59).toISOString();
      return db.getByParam('logs', {
        "date": {
          "$gte": start,
          "$lte": end
        }
      }, function(items) {
        var tableData;
        tableData = dataProcFn.createLogsTableData(items);
        return dataProcFn.runResponse(res, tableData, 'text/plain');
      });
    });
    app.post('/deleteitem', function(req, res) {
      return db.remove(req.body.collection, req.body._id.toString(), function(result) {
        return dataProcFn.runResponse(res, result, 'text/plain');
      });
    });
    return app.post('/update', function(req, res) {
      return db.update(req.body.collection, req.body._id.toString(), req.body.data, req.body.update_type, function(result) {
        return dataProcFn.runResponse(res, result, 'text/plain');
      });
    });
  };

}).call(this);
